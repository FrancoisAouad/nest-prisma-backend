version: '3.7'
services:
    api:
        build:
            context: .
            dockerfile: dockerfile
        container_name: api_c
        ports:
            - '5021:5021'
        depends_on:
            - postgres   
    prometheus:
        # prometheus server that scrapes metrics from prom-client server on express api
        image: prom/prometheus:latest
        container_name: prometheus_c
        ports:
            - '9090:9090'
        volumes:
            - './etc/prometheus/config.yaml:/etc/prometheus/config.yaml'
        command:
            - '--config.file=/etc/prometheus/config.yaml'
        restart: always
    grafana:
        image: grafana/grafana:latest
        container_name: grafana_c
        ports:
            - '3000:3000'
        user: 'root'
        volumes:
            - './etc/grafana/grafana.ini:/etc/grafana/grafana.ini'
            - './etc/grafana/provisioning:/etc/grafana/provisioning'
            - './etc/grafana/data:/var/lib/grafana'
        restart: always
    loki:
        #server that scrapes log history and data and sends them to grafana as source
        image: grafana/loki:latest
        container_name: loki_c
        ports:
            - '3100:3100'
        volumes:
            - './etc/loki/config.yml:/loki/config.yml'
        command:
            - '--config.file=/loki/config.yml'   
    postgres:
        image: postgres:latest
        container_name: postgres_c
        restart: always
        volumes:
            - './var:/var/lib/postgresql/data'
        env_file:
            - .env
        environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
        - '5432:5432'
logging:
    driver: loki
    options:
    loki-url: "http://host.docker.internal:3100/loki/api/v1/push"